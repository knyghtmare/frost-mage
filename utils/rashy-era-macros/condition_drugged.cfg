#textdomain wesnoth-Rashy_Era

# ability, applies ability
# remove at start of turn
# apply at start of turn
# only living creatures

#define VR_STATUS_DRUGGED
	[regenerate]
		id=VR_drugged
		name= _ "medication"
		description= _ "This unit is taking medication, which makes them immune to poison for the duration and heals for 4 HP at start of next turn. This status is removed afterwards."
		value=4
		poison=slowed #cured?
	[/regenerate]
#enddef

#define VR_REMOVE_DRUGGED
[event]
# status is removed after healed, but before status is reapplied
	name=turn refresh
	first_time_only=no
	id=VR_drug_event_remove
	[store_unit]
		[filter]
			side=$side_number
			ability=VR_drugged
		[/filter]
		variable=unmedicate_start_turn
		mode=append
	[/store_unit]
	{VARIABLE j 0}	
	[while]
		[variable]
			name=j
			less_than=$unmedicate_start_turn.length
		[/variable]
		[do]
			[unstore_unit]
				variable=unmedicate_start_turn[$j]
			[/unstore_unit]
# remove the object (including ability and overlay) after healed
			[remove_object]
				x,y=$unmedicate_start_turn[$j].x,$unmedicate_start_turn[$j].y
				object_id=VR_drugged_object
			[/remove_object]
# removes the unpoisonable status for units with the dummy trait
			[modify_unit]
				[filter]
					x,y=$unmedicate_start_turn[$j].x,$unmedicate_start_turn[$j].y
					trait=VR_drug_trait
				[/filter]
				[effect]
					apply_to=status
					remove=unpoisonable
				[/effect]
			[/modify_unit]
# remove the dummy trait
			[remove_trait]
				[filter]
					x,y=$unmedicate_start_turn[$j].x,$unmedicate_start_turn[$j].y
					trait=VR_drug_trait
				[/filter]
				trait_id=VR_drug_trait
			[/remove_trait]
			[set_variable]
				name=j
				add=1
			[/set_variable]
		[/do]
	[/while]
	{CLEAR_VARIABLE j}
	{CLEAR_VARIABLE unmedicate_start_turn}
[/event]
#enddef

#define VR_APPLY_DRUGGED
[event]
	name=turn refresh
	first_time_only=no
	id=VR_drug_event_apply
	[modify_unit]
		[filter]
			[filter_adjacent]
				ability=VR_ab_drug
				is_enemy=no
			[/filter_adjacent]
			[not]
				ability=VR_drugged
			[/not]
			[not]
				status=not_living
			[/not]
			side=$side_number
		[/filter]
# apply an object with the drugged ability and overlay. id so it can be removed
		[object]
			duration=forever
			id=VR_drugged_object
			take_only_one=no
			[effect]
				apply_to=new_ability
				[abilities]
					{VR_STATUS_DRUGGED}
				[/abilities]
			[/effect]
			[effect]
				apply_to=overlay
				add="utils/drugged.png"
			[/effect]
		[/object]
	[/modify_unit]
# add the unpoisonable status and a dummy trait so it can be removed later
# actually, we could filter for the ability instead
# but unpoisonable is not undead, so this works better with what I had in mind
	[modify_unit]
		[filter]
			[filter_adjacent]
				ability=VR_ab_drug
				is_enemy=no
			[/filter_adjacent]
			[not]
				status=unpoisonable
			[/not]
			side=$side_number
		[/filter]
		[effect]
			apply_to=status
			add=unpoisonable
		[/effect]
		[trait]
			id=VR_drug_trait
			name= _ "immune"
			help_text= _ "The immune trait cancels the effect of poison. Plague and drain still apply normal."
			description= _ "Immune against poison"
		[/trait]
	[/modify_unit]
	[store_unit]
		[filter]
			ability=VR_drunk_1
			side=$side_number
		[/filter]
		variable=animate_drug
		mode=append
	[/store_unit]
	{VARIABLE j 0}
	[while]
		[variable]
			name=j
			less_than=$animate_drug.length
		[/variable]
		[do]
			[unstore_unit]
				variable=animate_drug[$j]
			[/unstore_unit]
			[animate_unit]
				flag=poisoned 
				[filter]
					x,y=$animate_drug[$j].x,$animate_drug[$j].y
				[/filter]
				text= _ "Medicated"
				red=200
				green=0
				blue=200
			[/animate_unit]
			[set_variable]
				name=j
				add=1
			[/set_variable]
		[/do]
	[/while]
	{CLEAR_VARIABLE j}
	{CLEAR_VARIABLE animate_drug}
[/event]
#enddef

#define VR_AURA_DRUG
# for some reason this does not work. anly adds a "side turn" ability
	[dummy]
		id=VR_ab_drug
		name= _ "Medicate"
		description= _ "This unit can distibute medicine to surrounding allies. Medicated units heal 4HP at the begining of next turn and are immune to poison while the effect lasts."
		apply_to=opponent
	[/dummy]
#enddef
